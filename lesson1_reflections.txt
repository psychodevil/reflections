Q: How did viewinng a diff between two versions of a file help you see A:the bug that was introduced?
diff helped me to located the lines that has differences in them and showed how these lines were modified in both versions 
I then came to the modified lines and searched for the typo

Q:How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A: By easily debugging the errors and track down the changes and the progess of the projects

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
A:
Cons:
 Sometimes I forget to save changes or the electricity goes out.
Pros: 
 It saves logical changes, not some cluttered text

Q:Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A: It's usually based on what is the purpose of the VCS that for Google Docs the purpose for it is to make single documents, but for Git it's purpose is to control projects and projects tend to have multiple files.

Q: How can you use the commands git log and git diff to view the history of files?
A: First: type in the command (git log) in the bash and you will see the changes over the entire history of the files.
	Next copy the Ids of the files you want to compare and then type the command (git diff Id_of_firstFile Id_of_secondFile)

Q: How might using version control make you more confident to make changes that could break something?
A: As I always have the opportunity to go back to my older commits and I also have the abilty to compare my commits to see how that thing was broken and then fix it in my later versions

Q: What do you want to try using Git for?
A: An online course on data science